Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-09-02T18:51:22+02:00

====== 2020-09-02 ======
Created Wednesday 02 September 2020

====== Writing ======
Created Wednesday 02 September 2020

Thinking in writing.

When programming you take for granted that the first version is not correct. Thinking is approximately as hard as programming, so it seems likely that the first version of your thinking is not correct. Thinking should be more like programming.

When thinking there is bias to believe what you think is correct. This leads to you uncritically accepting the first idea that comes to mind since you don't want to be wrong. Thinking should involve more iterations. You should be able to revisit, re-evaluate and iterate on ideas. Writing enables some mutability for thoughts but it's not perfect since the I/O is quite slow.


====== Evaluating thoughts ======
Created Wednesday 02 September 2020

In programming there is a computer that tells you that your program is (or isn't) correct. The computer is quite objective in its judgement. And you can measure things like speed or size to further validate that the program is good. Typically it is extremely hard to test the quality of your thoughts in any objective way. You need a friend or an audience.

Can an audience work like a computer evaluating a program? I think it is hard. Good quality feedback is hard to get and your audience comments are biased based on their opinion of you. Content creators also have to worry about things like popularity & monetization. It could also be that your idea was good but the delivery wasn't or that the medium wasn't suitable for that idea.

Also people are often wrong. What good is evaluator that can be wrong? Try to for example get a good evaluation for any political idea and all your feedback will be pretty much worthless.

Another issue is that comments are not ideal feedback mechanism. Teacher marking fixes to an essay can be much more direct and effective than if they had to make comments that are separated from the text. You can do direct comments like this e.g. in Google Docs but opening your docs to public would be a mess. I imagine these issues could be solved in somekind of wiki for thoughts.


====== Programming lessons applied to writing ======
Created Wednesday 02 September 2020

* DRY
	* Good text doesn't repeat same ideas too much. There might be a central topic, but the at least the angle needs to change.
	* Fiction writers make sure not to overuse any words.
* Keep it simple, stupid. Best text is direct and light. Less is more.


* Semantic compression
	* Harder to see how it can be applied to writing.
	* It would be extremely valuable if somehow possible.
	* Achieving semantic compression might be the whole point of Zettelkasten.
	* Requires: Finding similar thoughts, extracting them, leaving behind references.
	* Identifying similarities from writing sounds really hard.
	* References make reading hard. Zettelkasten writers collect their works into something readable.

====== Walking ======
Created Wednesday 02 September 2020

Utilize the two springs in your legs:
* Feet and ankle
* Knees

You need to be relaxed enough to allow your legs to store and release energy. Optimal walking is almost effortless.

Practically: You need to let your knees bend in your walking cycle.
